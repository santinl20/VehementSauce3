#include <kipr/botball.h>
int IR = 0;									
int IR2 = 1;								
int zone = 4000;							
int l_motor = 0;
int r_motor = 3;
int speed = 80;
int lspeed = 10;
int rspeed = 10;
int Fire;
int red = 0; 
int yellow = 1;
int counter = 0;
int f_et = 5; 
int f_target_L = 2500;
int f_target_R = 2850;
int target=1000;
int main()
{
	wait_for_light(4);
    shut_down_in(120.0);
    
    printf("Stage 1\n");
    enable_servos();
	set_servo_position(0, 1180);
	msleep(2000);
	set_servo_position(0, 940);
	msleep(2000);
    
    printf("Stage 2\n");
    forward_1();
    msleep(2000);
    ao();
    msleep(500);
    
    printf("Stage 3\n");
    find_line();
    
    printf("Stage 4\n");
    t_left();
    msleep(250);
    ao();
    back_ward();
    msleep(250);
    ao();
    
    printf("Stage 5\n");
    camera_open_black();
    while(counter < 12){
        camera_update();
        printf("yellow = %d\n", get_object_count(yellow));
        printf("red = %d\n", get_object_count(red));
        counter = counter + 1;
        msleep(100);
    }
    
    printf("Stage 6\n");
     while(1){
         camera_update();
        if(get_object_count(red)>0){
            Fire = 1;
            break;
        }
         else {
           Fire = 0;
            break;
    }
    }
    while(1){
		if(Fire==1){
        camera_update();
        adjust_for_drop();
        building_1();
            break;
        }
    ambulance_1();
    return 0;
}
}
									//functions// 
	void adjust_for_drop(){
        printf("Red X = %d\n", get_object_center_x(red,0));
    }	
    void forward_1(){
         motor(l_motor,10);
         motor(r_motor,50);
    }
    void forward_2(){
    	motor(l_motor,10);
        motor(r_motor,10);
    }
	void back_ward(){
      motor(r_motor,-25);
      motor(l_motor,-25);
    } 
    void t_left(){
        motor(l_motor, 35);
        motor(r_motor, 0);
    }
    void t_right(){
        motor(l_motor, 0);
        motor(r_motor, 35);
    }
    void open_claw(){
    motor(1,30);
    msleep(3000);
    }
	void find_line(){
    	printf("Find the Black Line\n");
    	while(analog(IR)<zone){					  
			forward_1();
		}
        ao();
    }
	void building_1(){
        printf("building_1\n");
        camera_update();
		while(get_object_center_x(red,0)>85 || get_object_center_x(red,0)<80){
            camera_update();
            if(get_object_center_x(red,0)>85){
                t_left();
    		}
            camera_update();
            if(get_object_center_x(red,0)<80){
                t_right();
            }
        }
        ao();
    }
	void ambulance_1(){
        printf("ambulance_1\n");
        while(analog(f_et)<f_target_L){
        	forward_2();
        }
        ao();
        open_claw();
    }
