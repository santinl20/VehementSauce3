#include <kipr/botball.h>
//declare variables
int l_motor = 0;
int r_motor = 2;
int speed = 50;
int pause = 2000;
int arm_pos = 750;
int lspeed = 30;
int rspeed = 30;
int turntime = 1250;
int s_et = 0;         						//side sensor
int f_et = 5;         						//front sensor
int target = 2450;							//indicates wall is too close
int mark = 2700;

int main(){
	follow_wall();							//a single function
    l_turn();
    msleep(turntime);
    ao();
    f_wall();
    return 0;
}

         //function//
	void forward(){
         motor(l_motor,speed);
         motor(r_motor,speed);
     }
    void t_left(){
        motor(l_motor, lspeed);
        motor(r_motor, 70);
    }
    void t_right(){
        motor(r_motor, rspeed);
        motor(l_motor, 70);
    }
	void l_turn(){
        motor(l_motor, 100);
    }
    void follow_wall(){
    while(analog(f_et)<target){            
      if(analog(s_et)<target){            //number < target = go forward and right
         printf("veering toward\n");
         t_left();
      }     
      if(analog(s_et)>target){  		//when number > target = go forward and left
      printf("veering away\n");
          t_right();                          //action will make robot do a serpetine
      }
  }
        ao();
    }

	void f_wall(){
    while(analog(f_et)<mark){            
      if(analog(s_et)<mark){            //number < target = go forward and right
         printf("veering toward\n");
         t_left();
      }     
      if(analog(s_et)>mark){  		//when number > target = go forward and left
      printf("veering away\n");
          t_right();                          //action will make robot do a serpetine
      }
  }
        ao();
    }
